import proguard.gradle.ProGuardTask

// ---------------- <   project > ----------------
group   'org.freecore'
version '0.1-DEV'
// ---------------- < / project > ----------------

// ---------------- <   plugins > ----------------
apply plugin : 'java'
apply plugin : 'application'
// ---------------- < / plugins > ----------------

// ---------------- <   settings > ----------------
def jarpath         = 'build/libs/'                        // Path to libraries in build directory
def jarname         = 'TaskSim'                            // Name of .jar file
def mainClass       = 'me.igorek536.tasksim.TaskSim'       // Main class
def compat          =  1.8                                 // Java's version
def proguardCfgPath = 'proguard.txt'                       // Path to proguard's configuration

repositories {
    mavenCentral()
    jcenter()
}
dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.9.1'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.fusesource.jansi', name: 'jansi', version: '1.16'
}
// ---------------- < / settings > ----------------
// DO NOT EDIT LINES BELOW!!!

buildscript {
    repositories {
        flatDir dirs: 'proguard'
    }
    dependencies {
        classpath ':proguard:'
    }
}
sourceCompatibility = compat
targetCompatibility = compat
mainClassName       = mainClass

// Proguard task
task proguard(type: ProGuardTask) {
    configuration proguardCfgPath
    injars jarpath + jarname + '-deobf.jar'
    outjars jarpath + jarname + '.jar'
}

task copyToLib(type: Copy) {
    into "$buildDir/libs/libraries"
    from configurations.runtime
}

// Not used in this project
//
// task copyNatives(type: Copy) {
//     from "."
//     into "$buildDir/libs/libraries"
//     include "natives/"
// }

build.dependsOn(copyToLib)
// build.dependsOn(copyNatives)
proguard.dependsOn(build)

// Jar configuration
jar {
    manifest {
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
        attributes 'Main-Class': mainClass
        attributes 'Class-Path': configurations.runtime.files.collect { "libraries/$it.name" }.join(' ')
    }
    configurations { jar.archiveName = jarname + '-deobf.jar' }
}